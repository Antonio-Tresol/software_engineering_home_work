// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Universidad.Models;

namespace Universidad.Context;

public partial class DB_UniversidadContext : DbContext
{
    public DB_UniversidadContext()
    {
    }

    public DB_UniversidadContext(DbContextOptions<DB_UniversidadContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Asignado_a> Asignado_a { get; set; }

    public virtual DbSet<Asistente> Asistente { get; set; }

    public virtual DbSet<Carrera> Carrera { get; set; }

    public virtual DbSet<Comision> Comision { get; set; }

    public virtual DbSet<Curso> Curso { get; set; }

    public virtual DbSet<Empadronado_en> Empadronado_en { get; set; }

    public virtual DbSet<Escuela> Escuela { get; set; }

    public virtual DbSet<Estudiante> Estudiante { get; set; }

    public virtual DbSet<Facultad> Facultad { get; set; }

    public virtual DbSet<Grupo> Grupo { get; set; }

    public virtual DbSet<Investigacion> Investigacion { get; set; }

    public virtual DbSet<Lleva> Lleva { get; set; }

    public virtual DbSet<Participa_en> Participa_en { get; set; }

    public virtual DbSet<Pertenece_a> Pertenece_a { get; set; }

    public virtual DbSet<Profesor> Profesor { get; set; }

    public virtual DbSet<Requiere_De> Requiere_De { get; set; }

    public virtual DbSet<Trabaja_en> Trabaja_en { get; set; }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
       => optionsBuilder.UseSqlServer("Data Source=TRESOL-PC\\SQLEXPRESS;Initial Catalog=DB_Universidad;Integrated Security=True;Encrypt=False;TrustServerCertificate=False;");
    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Asignado_a>(entity =>
        {
            entity.Property(e => e.CedProf).IsFixedLength();

            entity.HasOne(d => d.CedProfNavigation).WithMany(p => p.Asignado_a)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AsignadoA_Prof");

            entity.HasOne(d => d.NombComisionNavigation).WithMany(p => p.Asignado_a)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_AsignadoA_Comision");
        });

        modelBuilder.Entity<Asistente>(entity =>
        {
            entity.Property(e => e.Cedula).IsFixedLength();

            entity.HasOne(d => d.CedulaNavigation).WithOne(p => p.Asistente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Asist_Est");
        });

        modelBuilder.Entity<Carrera>(entity =>
        {
            entity.HasOne(d => d.CodEscuelaNavigation).WithMany(p => p.Carrera)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Carrera__CodEscu__5CD6CB2B");
        });

        modelBuilder.Entity<Empadronado_en>(entity =>
        {
            entity.Property(e => e.CedEstudiante).IsFixedLength();

            entity.HasOne(d => d.CedEstudianteNavigation).WithMany(p => p.Empadronado_en)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EmpadronadoEn_Est");

            entity.HasOne(d => d.CodCarreraNavigation).WithMany(p => p.Empadronado_en)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_EmpadronadoEn_Carrera");
        });

        modelBuilder.Entity<Escuela>(entity =>
        {
            entity.HasOne(d => d.CodFacultadNavigation).WithMany(p => p.Escuela)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Escuela__CodFacu__5FB337D6");
        });

        modelBuilder.Entity<Estudiante>(entity =>
        {
            entity.Property(e => e.Cedula).IsFixedLength();
            entity.Property(e => e.Estado).HasDefaultValueSql("('Activo')");
            entity.Property(e => e.Sexo).IsFixedLength();
            entity.Property(e => e.Teléfono).IsFixedLength();
        });

        modelBuilder.Entity<Grupo>(entity =>
        {
            entity.Property(e => e.CedAsist).IsFixedLength();
            entity.Property(e => e.CedProf).IsFixedLength();

            entity.HasOne(d => d.CedAsistNavigation).WithMany(p => p.Grupo).HasConstraintName("FK_Grupo_Asist");

            entity.HasOne(d => d.CedProfNavigation).WithMany(p => p.Grupo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Grupo_Prof");

            entity.HasOne(d => d.SiglaCursoNavigation).WithMany(p => p.Grupo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Grupo_Curso");
        });

        modelBuilder.Entity<Lleva>(entity =>
        {
            entity.Property(e => e.CedEstudiante).IsFixedLength();

            entity.HasOne(d => d.CedEstudianteNavigation).WithMany(p => p.Lleva)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Lleva_Est");

            entity.HasOne(d => d.Grupo).WithMany(p => p.Lleva)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Lleva_Grupo");
        });

        modelBuilder.Entity<Participa_en>(entity =>
        {
            entity.HasKey(e => new { e.CedProf, e.NumProy }).HasName("PK_Participa_e");

            entity.Property(e => e.CedProf).IsFixedLength();

            entity.HasOne(d => d.CedProfNavigation).WithMany(p => p.Participa_en)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ParticipaEn_Prof");

            entity.HasOne(d => d.NumProyNavigation).WithMany(p => p.Participa_en)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ParticipaEn_Investigacion");
        });

        modelBuilder.Entity<Pertenece_a>(entity =>
        {
            entity.HasOne(d => d.CodCarreraNavigation).WithMany(p => p.Pertenece_a)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PerteneceA_Carrera");

            entity.HasOne(d => d.SiglaCursoNavigation).WithMany(p => p.Pertenece_a)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PerteneceA_Curso");
        });

        modelBuilder.Entity<Profesor>(entity =>
        {
            entity.Property(e => e.Cedula).IsFixedLength();
            entity.Property(e => e.Sexo).IsFixedLength();
            entity.Property(e => e.Teléfono).IsFixedLength();
        });

        modelBuilder.Entity<Requiere_De>(entity =>
        {
            entity.HasOne(d => d.SiglaCursoRequeridorNavigation).WithMany(p => p.Requiere_DeSiglaCursoRequeridorNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RequiereDe_CursoRequeridor");

            entity.HasOne(d => d.SiglaCursoRequisitoNavigation).WithMany(p => p.Requiere_DeSiglaCursoRequisitoNavigation)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_RequiereDe_CursoRequisito");
        });

        modelBuilder.Entity<Trabaja_en>(entity =>
        {
            entity.Property(e => e.CedProf).IsFixedLength();

            entity.HasOne(d => d.CedProfNavigation).WithMany(p => p.Trabaja_en)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TrabajaEn_Prof");

            entity.HasOne(d => d.CodEscuelaNavigation).WithMany(p => p.Trabaja_en)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_TrabajaEn_Escuela");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}